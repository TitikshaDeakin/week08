name: Frontend CI - Build & Push Image

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml'
  workflow_dispatch:
    inputs:
      PRODUCT_API_URL:
        description: "Public URL for Product API (e.g., http://4.237.166.140:8000)"
        required: true
      ORDER_API_URL:
        description: "Public URL for Order API (e.g., http://4.254.100.97:8001)"
        required: true

permissions:
  contents: read
  id-token: write
  packages: write

concurrency:
  group: frontend-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_frontend:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug ACR login server
        run: echo "Using ACR login server:${{ env.ACR_LOGIN_SERVER }}"

      - name: (Optional) Inject API URLs into main.js for manual runs
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
          set -euo pipefail
          # Show the first lines for sanity
          head -n 5 frontend/main.js || true

          # Ensure placeholders exist
          if ! grep -q "_PRODUCT_API_URL_" frontend/main.js; then
            echo "ERROR: Placeholder _PRODUCT_API_URL_ not found in frontend/main.js"
            exit 1
          fi
          if ! grep -q "_ORDER_API_URL_" frontend/main.js; then
            echo "ERROR: Placeholder _ORDER_API_URL_ not found in frontend/main.js"
            exit 1
          fi

          # Do the replacements
          sed -i "s|_PRODUCT_API_URL_|${{ github.event.inputs.PRODUCT_API_URL }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ github.event.inputs.ORDER_API_URL }}|g" frontend/main.js

          echo "Injected:"
          echo "  PRODUCT_API_URL=${{ github.event.inputs.PRODUCT_API_URL }}"
          echo "  ORDER_API_URL=${{ github.event.inputs.ORDER_API_URL }}"

          # Show a diff summary
          echo "--- diff preview ---"
          grep -n "const .*_BASE_URL" frontend/main.js || true
          echo "--------------------"

      - name: Docker login to ACR
        shell: bash
        run: |
          if [ -z "${{ env.ACR_LOGIN_SERVER }}" ]; then
            echo "ACR_LOGIN_SERVER is empty. Check secret AZURE_CONTAINER_REGISTRY."
            exit 1
          fi
          echo "${{ secrets.ACR_PASSWORD }}" | docker login "${{ env.ACR_LOGIN_SERVER }}" \
            -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build & Push Frontend Image
        shell: bash
        run: |
          docker build -t "${{ env.ACR_LOGIN_SERVER }}/frontend:latest" \
                       -t "${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}" \
                       ./frontend/
          docker push "${{ env.ACR_LOGIN_SERVER }}/frontend:latest"
          docker push "${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}"

      - name: Docker logout
        if: always()
        run: docker logout "${{ env.ACR_LOGIN_SERVER }}"
